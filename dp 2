#include <bits/stdc++.h>
using namespace std; 
int mat[101][101];
int inf = 1e9;
int kadane(vector<int> &v) { 
    int n = v.size(); int ret = 0, me = -inf, csum = 0;
    for (int i = 0; i < n; i++) { 
        csum += v[i];
        if (csum < 0) { 
            csum = 0; } 
        ret = max(ret, csum); 
        me = max(me, v[i]); } 
    if (me < 0) 
        return me;
    else 
        return ret; }
int main() { 
    int t; cin >> t; 
    while (t--) {
        int mxsum = -inf, sum, n, m;
        cin >> n >> m; 
        for (int i = 0; i < n; i++) { 
            for (int j = 0; j < m; j++) { 
                cin >> mat[i][j]; } }
        for (int l = 0; l < m; l++) { 
            vector<int> v(n, 0); 
            for (int r = l; r < m; r++) {
                for (int i = 0; i < n; i++) { 
                    v[i] += mat[i][r]; } 
                mxsum = max(kadane(v), mxsum); } } cout << mxsum << endl; } }

